#Choses a faire : tri + moyennes

import ctypes as ct
import matplotlib.pyplot as plt
#from matplotlib import rc

#rc('text',usetex=True)

c_library = ct.CDLL("./main.so")

point_list = [[],[]]

options=open("./Option_graph.txt","r")

Opt=options.read().split()[-4:]
options.close()

indiv_d,indiv_f=int(Opt[0]),int(Opt[1])
pas=int(Opt[2])

if Opt[3]=="0":
    pylones=[]
else:
    pylones=Opt[3].split(',')

print("Les anciens paramètres sont les suivants :")
print(f"{indiv_d} individus au départ et {indiv_f} à la fin")
print(f"Le pas est pour le moment de {pas}")

if len(pylones)==0:
    print("Aucun pylône n'est placé")
else:
    print(f"Il y a {len(pylones)} pylônes en ")

    for i in pylones:
        print(i)

print("Souhaitez vous changer ces paramètres ?\ny/N")

options=open("./Option_graph.txt","a")
if input()=="y":
    indiv_d=int(input("Combien d'individus voulez vous au départ ? "))
    indiv_f=int(input("Combien à l'arrivée ? "))
    pas=(indiv_f-indiv_d)//10
    print(f"Le pas est de {pas}")

    if input("Souhaitez-vous mettre des pylones ?\ny/N ")=="y":
        pylones=[]
        nb_pylones=int(input("Combien de pylônes voulez-vous mettre ? "))

        if nb_pylones!=0:
            pylones.append(input("Où voulez vous mettre le 1er ? (format x;y) "))

        for i in range(2,nb_pylones+1):
            pylones.append(input(f"Où voulez vous mettre le {i}ème pylone ? "))
        
    else:
        options.write("0")

    options.write(f"{indiv_d} {indiv_f} {pas}")
    
    for i in range(len(pylones)):
        options.write(pylones[i])
        if i!=len(pylones)-1:
            options.write(',')
    options.write("\n")

options.close()

for i in range(len(pylones)):
    x,y=pylones[i].split(';')
    c_library.preaddPylones(int(x),int(y))

for i in range(indiv_d,indiv_f, pas):
    simu_resultat=c_library.evacuate(i)
    point_list[0].append(simu_resultat%10000)
    point_list[1].append(simu_resultat//10000)

plt.title("Résultat de la simulation")
plt.plot(point_list[0], point_list[1])
plt.ylabel("Nombre d'itérations")
plt.xlabel("Nombre d'individus")
plt.show()
