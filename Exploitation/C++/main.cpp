#include "simulation.hpp"
#include "individu.hpp"
#include <ctime>

extern const unsigned int TAILLE_GRILLE; // Défini dans individu.h
// extern "C" pour que la fonction ne soit pas renommée par le compilateur
// et donc utilisable dans le prog python
extern "C" int evacuate(int nb_indiv);
extern "C" void preaddPylones(int p_x,int p_y);

int pre_pylones[50];
int ind_pre=0;

// extern const unsigned int T; // Défini dans individu.

int main(int argc, char* argv[])
{
    evacuate(100);
    return 0;
}


extern "C" void preaddPylones(int p_x,int p_y)
{
    pre_pylones[ind_pre]=p_x;
    pre_pylones[ind_pre+1]=p_y;
    ind_pre=ind_pre+2;
}

extern "C" int evacuate(int nb_indiv)
{
    srand(time(NULL));
    const unsigned int T = 50;
    Simulation<T> simul;

    for(unsigned int i=0; i<T-1; i++)
    {
	simul.addPylone(0,i);
	simul.addPylone(T-1,T-1-i);
	simul.addPylone(i,T-1);
	simul.addPylone(T-1-i,0);

	simul.addPylone(1,i);
	simul.addPylone(T-2,T-2-i);
	simul.addPylone(i,T-2);
	simul.addPylone(T-2-i,1);
    }

    for(int i=0; i<ind_pre-2;i=i+2)
    {
	simul.addPylone(pre_pylones[i],pre_pylones[i+1]);
    }

    simul.addNIndiv(nb_indiv);
    simul.addSortie(T/2-1, T-2);
    simul.addSortie(T/2-2, T-2);

    return simul.run();
}
