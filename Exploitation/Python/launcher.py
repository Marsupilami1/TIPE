import numpy as np
import ctypes as ct
from time import time
import matplotlib.pyplot as plt

import database as db

def run():
    j = 0
    for i in range(start, end, step):
        results = c_library.evacuate(i)
        point_list[0][j] += results % 10000
        point_list[1][j] += results // 10000
        j += 1

c_library = ct.CDLL("../C++/main.so")
database = db.Database("./options.db")
Opt = database.getLast()

point_list = np.array([])
nb_pylons = 0

start, end, step, avg, pylons = Opt


print("Les derniers paramètres sont :")
print("Bornes :")
print(f"  Début : {start}\n  Fin : {end}")
print(f"Step : {step}")
print(f"Avg : {avg} séries")

if len(pylons)==0:
    print("Aucun pylône n'est placé")
else:
    print(f"Il y a {len(pylons)} pylônes en ")
    for i in pylons:
        print(i)

if input("Souhaitez vous changer ces paramètres ? [y/N] ") == "y":
    start = int(input("Nombre d'individus minimal : "))
    end = int(input("Nombre d'individus maximal : "))
    step = int(input("Pas : "))
    avg = int(input("Nombre de simulations : "))


    if input("Souhaitez-vous mettre des pylons ? [y/N] ")=="y":
        pylons = []
        nb_pylons = int(input("Nombre de pylones : "))

        if nb_pylons  > 0:
            print("Les positions doivent être entée avec le format : x,y")
            for i in range(nb_pylons):
                xy = input(f"Position du pylône {i+1} : ")
                pylons.append([int(i) for i in xy.split(',')])

    database.addValue(start, end, step, avg, pylons)


for pylon in pylons:
    x,y = pylon
    c_library.preaddPylones(x, y)


nb_points = (end-start)//step
point_list = np.array([np.zeros(nb_points), np.zeros(nb_points)])

t0 = time()

for i in range(avg):
    run()
    print(f"Série {i+1} terminé")

print(time()-t0)


print("Génération du graphe : ")
plt.title("Résultat de la simulation")
plt.plot(point_list[0]/avg, point_list[1]/avg)
plt.ylabel("Nombre d'itérations")
plt.xlabel("Nombre d'individus")

plt.show()
